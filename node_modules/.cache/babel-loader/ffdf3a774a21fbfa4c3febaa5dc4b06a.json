{"ast":null,"code":"var _jsxFileName = \"/home/arunkumar/Desktop/web_dev/heart-disease-detector/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super();\n\n    this.onsubmitpredict = () => {\n      fetch('https://flask-server-fs.herokuapp.com/predict', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          age: this.state.age_value,\n          sex: this.state.sex_value,\n          cp: this.state.cp_value,\n          trestbps: this.state.trestbps_value,\n          chol: this.state.chol_value,\n          fbs: this.state.fbs_value,\n          restecg: this.state.restecg_value,\n          thalach: this.state.thalach_value,\n          exang: this.state.exang_value,\n          oldpeak: this.state.oldpeak_value,\n          slope: this.state.slope_value,\n          ca: this.state.ca_value,\n          thal: this.state.thal_value\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        this.setState({\n          output: data\n        });\n      });\n    };\n\n    this.state = {\n      age_value: '',\n      sex_value: '',\n      cp_value: '',\n      trestbps_value: '',\n      chol_value: '',\n      fbs_value: '',\n      restecg_value: '',\n      thalach_value: '',\n      exang_value: '',\n      oldpeak_value: '',\n      slope_value: '',\n      ca_value: '',\n      thal_value: '',\n      output: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://flask-server-fs.herokuapp.com/').then(Response => Response.json()).then(console.log);\n  }\n\n  render() {\n    // const inline = {\n    //   margin-bottom = \"10px\"\n    // }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"HEART DISEASE DETECTOR\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, \"Age\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Enter Your Age:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"age-label\",\n      input: this.state.age_value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      min: \"1\",\n      className: \"slider\",\n      max: \"100\",\n      step: \"1\",\n      onChange: Event => {\n        this.setState({\n          age_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 153\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, \"Sex\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Male\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      value: 1,\n      onChange: Event => {\n        this.setState({\n          sex_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Female\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      value: 0,\n      onChange: Event => {\n        this.setState({\n          sex_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 132\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, \"Chest Pain Type\")), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"0: Typical angina: chest pain related decrease blood supply to the heart\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 85\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 91\n      }\n    }), \"1: Atypical angina: chest pain not related to heart\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 64\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 70\n      }\n    }), \"2: Non-anginal pain: typically esophageal spasms (non heart related)\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 81\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 87\n      }\n    }), \"3: Asymptomatic: chest pain not showing signs of disease\", /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 69\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.cp_value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"3\",\n      step: \"1\",\n      className: \"slider\",\n      onChange: Event => {\n        this.setState({\n          cp_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, \"trestbps\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.trestbps_value,\n      onChange: Event => {\n        this.setState({\n          trestbps_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      min: \"94\",\n      className: \"slider\",\n      max: \"200\",\n      step: \"1\",\n      onChange: Event => {\n        this.setState({\n          trestbps_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 159\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, \"cholestrol\")), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.chol_value,\n      onChange: Event => {\n        this.setState({\n          chol_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"slider\",\n      type: \"range\",\n      min: \"126\",\n      max: \"564\",\n      step: \"1\",\n      onChange: Event => {\n        this.setState({\n          chol_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 156\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, \"fasting blood sugar\")), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"fbs_no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"fbs\",\n      value: 0,\n      onChange: Event => {\n        this.setState({\n          fbs_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"fbs_yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"fbs\",\n      value: 1,\n      onChange: Event => {\n        this.setState({\n          fbs_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 129\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, \"restecg\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.restecg_value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      className: \"slider\",\n      min: \"0\",\n      max: \"2\",\n      step: \"1\",\n      onChange: Event => {\n        this.setState({\n          restecg_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, \"thalach\")), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.thalach_value,\n      onChange: Event => {\n        this.setState({\n          thalach_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"slider\",\n      type: \"range\",\n      min: \"71\",\n      max: \"202\",\n      step: \"1\",\n      onChange: Event => {\n        this.setState({\n          thalach_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 158\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, \"exang\")), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exang_no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"exang\",\n      value: 0,\n      onChange: Event => {\n        this.setState({\n          exang_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exang_yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"exang\",\n      value: 1,\n      onChange: Event => {\n        this.setState({\n          exang_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 133\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, \"Oldpeak\")), /*#__PURE__*/React.createElement(\"input\", {\n      typne: \"number\",\n      value: this.state.oldpeak_value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"slider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"6.2\",\n      step: \"0.2\",\n      onChange: Event => {\n        this.setState({\n          oldpeak_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 159\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, \"slope\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.slope_value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      className: \"slider\",\n      min: \"0\",\n      max: \"2\",\n      step: \"1\",\n      onChange: Event => {\n        this.setState({\n          slope_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, \"ca\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.ca_value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      className: \"slider\",\n      min: \"0\",\n      max: \"4\",\n      step: \"1\",\n      onChange: Event => {\n        this.setState({\n          ca_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, \"thal\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.thal_value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      className: \"slider\",\n      min: \"0\",\n      max: \"3\",\n      step: \"1\",\n      onChange: Event => {\n        this.setState({\n          thal_value: Event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, this.state.output)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"button\",\n      onClick: this.onsubmitpredict,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, \"Predict\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/arunkumar/Desktop/web_dev/heart-disease-detector/src/App.js"],"names":["React","Component","App","constructor","props","onsubmitpredict","fetch","method","headers","body","JSON","stringify","age","state","age_value","sex","sex_value","cp","cp_value","trestbps","trestbps_value","chol","chol_value","fbs","fbs_value","restecg","restecg_value","thalach","thalach_value","exang","exang_value","oldpeak","oldpeak_value","slope","slope_value","ca","ca_value","thal","thal_value","then","response","json","data","console","log","setState","output","componentDidMount","Response","render","Event","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super();\n    this.state= {\n      age_value: '',\n      sex_value: '',\n      cp_value: '',\n      trestbps_value : '',\n      chol_value: '',\n      fbs_value: '',\n      restecg_value: '',\n      thalach_value: '',\n      exang_value: '',\n      oldpeak_value: '',\n      slope_value: '',\n      ca_value: '',\n      thal_value: '',\n      output: ''\n    }\n    \n  }\n\n  onsubmitpredict = () => {\n    fetch('https://flask-server-fs.herokuapp.com/predict',{\n        method: 'POST',\n        headers: {'content-type': 'application/json'},\n        body: JSON.stringify({\n            age: this.state.age_value,\n            sex: this.state.sex_value,\n            cp: this.state.cp_value,\n            trestbps: this.state.trestbps_value,            \n            chol: this.state.chol_value,\n            fbs: this.state.fbs_value,\n            restecg: this.state.restecg_value,\n            thalach: this.state.thalach_value,\n            exang: this.state.exang_value,\n            oldpeak: this.state.oldpeak_value,\n            slope: this.state.slope_value,\n            ca: this.state.ca_value,\n            thal: this.state.thal_value\n        })\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n      this.setState({output: data})        \n    })\n  }\n\n  componentDidMount() {\n    fetch('https://flask-server-fs.herokuapp.com/')\n        .then(Response => Response.json())\n        .then(console.log)\n  }\n\n\n  render() {\n    // const inline = {\n    //   margin-bottom = \"10px\"\n    // }\n    return (\n      <div className=\"App\">\n        <h1>HEART DISEASE DETECTOR</h1>\n        <fieldset>\n          <legend><b>Age</b></legend>\n          <label>Enter Your Age:</label><br />\n          <input type=\"number\" id=\"age-label\" input={this.state.age_value}></input>\n          <input type=\"range\" min=\"1\" className=\"slider\" max=\"100\" step=\"1\" onChange={(Event)=>{this.setState({age_value:Event.target.value})}}></input><br />\n        </fieldset>\n        <fieldset>\n          <legend><b>Sex</b></legend>\n          <label htmlFor=\"male\" >Male</label>\n          <input  type=\"radio\" name=\"gender\" value={1} onChange={(Event)=>{this.setState({sex_value:Event.target.value})}}></input>\n          <label htmlFor=\"female\">Female</label>\n          <input  type=\"radio\" name=\"gender\" value={0} onChange={(Event)=>{this.setState({sex_value:Event.target.value})}}></input><br />\n        </fieldset>\n        <fieldset>\n          <legend><b>Chest Pain Type</b></legend>\n          <label className=\"font\">              \n            0: Typical angina: chest pain related decrease blood supply to the heart<hr /><br />\n            1: Atypical angina: chest pain not related to heart<hr /><br />\n            2: Non-anginal pain: typically esophageal spasms (non heart related)<hr /><br />\n            3: Asymptomatic: chest pain not showing signs of disease<hr /> <br />\n          </label>\n          <input type=\"number\" value={this.state.cp_value}></input>\n          <input type=\"range\" min=\"0\" max=\"3\" step=\"1\" className=\"slider\" onChange={(Event)=>{this.setState({cp_value:Event.target.value})}}></input>\n        </fieldset>\n        <fieldset>\n          <legend><b>trestbps</b></legend>\n          <input type=\"number\" value={this.state.trestbps_value} onChange={(Event)=>{this.setState({trestbps_value:Event.target.value})}}></input>\n          <input type=\"range\" min=\"94\" className=\"slider\" max=\"200\" step=\"1\" onChange={(Event)=>{this.setState({trestbps_value:Event.target.value})}}></input><br />\n        </fieldset>\n        <fieldset>\n          <legend><b>cholestrol</b></legend>\n          <input value={this.state.chol_value} onChange={(Event)=>{this.setState({chol_value:Event.target.value})}}></input>\n          <input className=\"slider\" type=\"range\" min=\"126\" max=\"564\" step=\"1\" onChange={(Event)=>{this.setState({chol_value:Event.target.value})}}></input><br />\n        </fieldset>            \n        <fieldset>\n          <legend><b>fasting blood sugar</b></legend>            \n          <span /><label htmlFor=\"fbs_no\" >No</label>\n          <input  type=\"radio\" name=\"fbs\" value={0} onChange={(Event)=>{this.setState({fbs_value:Event.target.value})}}></input>\n          <label htmlFor=\"fbs_yes\">Yes</label>\n          <input  type=\"radio\" name=\"fbs\" value={1} onChange={(Event)=>{this.setState({fbs_value:Event.target.value})}}></input><br />\n        </fieldset>\n        <fieldset>\n          <legend><b>restecg</b></legend>            \n          <input  type=\"number\" value={this.state.restecg_value}></input>\n          <input type=\"range\" className=\"slider\" min=\"0\" max=\"2\" step=\"1\" onChange={(Event)=>{this.setState({restecg_value:Event.target.value})}}></input>\n        </fieldset>\n        <fieldset>\n          <legend><b>thalach</b></legend>            \n          <input value={this.state.thalach_value} onChange={(Event)=>{this.setState({thalach_value:Event.target.value})}}></input>\n          <input className=\"slider\" type=\"range\" min=\"71\" max=\"202\" step=\"1\" onChange={(Event)=>{this.setState({thalach_value:Event.target.value})}}></input><br />\n        </fieldset>      \n        <fieldset>\n          <legend><b>exang</b></legend>          \n          <span /><label htmlFor=\"exang_no\" >No</label>\n          <input  type=\"radio\" name=\"exang\" value={0} onChange={(Event)=>{this.setState({exang_value:Event.target.value})}}></input>\n          <label htmlFor=\"exang_yes\">Yes</label>\n          <input  type=\"radio\" name=\"exang\" value={1} onChange={(Event)=>{this.setState({exang_value:Event.target.value})}}></input><br />\n        </fieldset>\n        <fieldset>\n          <legend><b>Oldpeak</b></legend>            \n          <input typne=\"number\" value={this.state.oldpeak_value}></input>\n          <input className=\"slider\" type=\"range\" min=\"0\" max=\"6.2\" step=\"0.2\" onChange={(Event)=>{this.setState({oldpeak_value:Event.target.value})}}></input><br />\n        </fieldset>\n        <fieldset>\n          <legend><b>slope</b></legend>            \n          <input type=\"number\" value={this.state.slope_value}></input>\n          <input type=\"range\" className=\"slider\" min=\"0\" max=\"2\" step=\"1\" onChange={(Event)=>{this.setState({slope_value:Event.target.value})}}></input>\n        </fieldset>\n        <fieldset>\n          <legend><b>ca</b></legend>            \n          <input  type=\"number\" value={this.state.ca_value}></input>\n          <input type=\"range\" className=\"slider\" min=\"0\" max=\"4\" step=\"1\" onChange={(Event)=>{this.setState({ca_value:Event.target.value})}}></input>\n        </fieldset>\n        <fieldset>\n          <legend><b>thal</b></legend>            \n          <input  type=\"number\" value={this.state.thal_value}></input>\n          <input type=\"range\" className=\"slider\" min=\"0\" max=\"3\" step=\"1\" onChange={(Event)=>{this.setState({thal_value:Event.target.value})}}></input>\n        </fieldset>\n        <div id=\"output\">\n          <span >{this.state.output}</span>\n        </div>\n        <div>  \n          <button id= \"button\" onClick={this.onsubmitpredict}>Predict</button>          \n        </div>        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}